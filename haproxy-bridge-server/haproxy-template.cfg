global
  user haproxy
  log stdout format raw local0 info

  # Use only cipher suites that support FS and AEAD
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
  log global
  mode tcp
  option tcplog
  option dontlognull
  timeout connect 15s
  timeout client 300s
  timeout server 300s

# This is built-in stats page of HAProxy. You can change the hard-coded username/password in the 'stats auth' line
# It will be available at http://[Bridge_Server_IP]:6543/stats or http://[Yourdomain.com]:6543/stats
# It is highly recommanded to enable ssl even with a self signed certificate
frontend stats
  mode http
  bind :6543 ssl crt /usr/local/etc/certificate.pem # ssl-min-ver TLSv1.1
  http-request redirect scheme https if !{ ssl_fc }
  stats enable
  stats hide-version
  stats uri /stats
  stats auth uzer:${HAPROXY_STATS_PASSWORD}
  option dontlog-normal

frontend front-443
  bind :443 tfo
  tcp-request inspect-delay 10s
  tcp-request content accept if { req_ssl_hello_type 1 }

  use_backend vless-tls if { req_ssl_sni -i ${VLESS_TLS_SNI} }
  #use_backend nginx-tls if { req_ssl_sni -i [YOURDOMAIN.COM] }
  #use_backend vmess-h2 if { req_ssl_sni -i [h2.YOURDOMAIN.COM] }

frontend front-80
  mode http
  bind :80 tfo
  option httplog
  #http-request redirect scheme https if { hdr_beg(Host) -i [YOURDOMAIN.COM] } !{ ssl_fc }

  use_backend vmess-ws if         { hdr(Host) -m end -i ${VMESS_HOST} }
  use_backend shadowsocks-ws if   { hdr(Host) -m end -i ${SHADOWSOCKS_HOST} }
  use_backend vless-ws if         { hdr(Host) -m end -i ${VLESS_HOST} }
  # use_backend nginx-http  if { hdr_beg(Host) -i [YOURDOMAIN.COM] }

backend vmess-ws
  mode http
  balance roundrobin
  server upstream1 ${UPSTREAM_PUB_IP}:80 maxconn 1024 check weight 100

backend shadowsocks-ws
  mode http
  server upstream1 ${UPSTREAM_PUB_IP}:100 maxconn 1024 check weight 100

backend vless-ws
  mode http
  server upstream1 ${UPSTREAM_PUB_IP}:1355 maxconn 1024 check weight 100

backend vless-tls
  mode tcp
  server upstream1 ${UPSTREAM_PUB_IP}:13555 maxconn 1024 check weight 100

# backend nginx-http
#   mode http
#   log /dev/log local3 debug
#   server local 127.0.0.1:3080 maxconn 128 check

# backend nginx-tls
#   log /dev/log local3 debug
#   server local 127.0.0.1:30443 maxconn 128 check

# backend vmess-h2
#   balance roundrobin
#   log /dev/log local3 debug
#   server upstream1 ${UPSTREAM_PUB_IP}:443 maxconn 128 # check weight 100

